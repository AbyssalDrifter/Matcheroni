#-------------------------------------------------------------------------------
# Configuration

# DEBUG enables DCHECK()
# Turning tracing on will generate _ton_ of spam in the C99 demo.
# Turning EXTRA_DEBUG on will generate even more spam.

### Debug build
build_mode = -g -O0 -Wall -Werror -Wno-unused-variable
#defs = ${defs} -DDEBUG
#defs = ${defs} -DMATCHERONI_ENABLE_TRACE
#defs = ${defs} -DEXTRA_DEBUG

### -Os needs stripping to minimize size
#build_mode = -Os -fdata-sections -ffunction-sections -Wl,--gc-sections -Wl,-s

### -O3 needs LTO to maximize performance
### LTO breaks "size obj/examples/json_parser.o"
#build_mode = -O3 -Wall -Werror -DRELEASE

includes = -I.

#include-what-you-use -Xiwyu --no_fwd_decls -std=c++20 -I. ${in}

#-------------------------------------------------------------------------------
# Rules

rule compile_cpp
  command = g++ -std=c++20 ${build_mode} ${defs} ${includes} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule compile_c
  command = gcc ${build_mode} ${includes} ${defs} -MMD -MF ${out}.d -c ${in} -o ${out}
  depfile = ${out}.d
  deps = gcc

rule link
  command = g++ -Wall ${build_mode} ${in} -lboost_system -lboost_regex -o ${out}

rule run_test
  command = ${in} && touch ${out}

rule iwyu
  command = include-what-you-use -std=c++20 -I. ${in} && touch ${out} 2> /dev/null

#-------------------------------------------------------------------------------
# Tests

#build obj/matcheroni/Matcheroni.hpp.iwyu : iwyu matcheroni/Matcheroni.hpp
#build obj/matcheroni/Parseroni.hpp.iwyu  : iwyu matcheroni/Parseroni.hpp
#build obj/matcheroni/Utilities.hpp.iwyu  : iwyu matcheroni/Utilities.hpp

build obj/tests/matcheroni_test.o : compile_cpp tests/matcheroni_test.cpp
build bin/tests/matcheroni_test   : link obj/tests/matcheroni_test.o

build obj/tests/parseroni_test.o  : compile_cpp tests/parseroni_test.cpp
build bin/tests/parseroni_test    : link obj/tests/parseroni_test.o

#build bin/matcheroni_test_pass : run_test bin/test/matcheroni_test
#build bin/parseroni_test_pass  : run_test bin/test/parseroni_test

#-------------------------------------------------------------------------------
# Benchmark

# These are the various regex libraries that Matcheroni can be benchmarked
# against. CTRE and SRELL require that you copy their header into matcheroni/.

#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_BASELINE
#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_MATCHERONI
#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_CTRE
#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_BOOST
#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_STD_REGEX
#benchmark_defs = ${benchmark_defs} -DREGEX_BENCHMARK_SRELL

# These defines are required to reduce the compiled size of the SRELL library used in the benchmark.
#benchmark_defs = ${benchmark_defs} -DSRELL_NO_UNICODE_ICASE -DSRELL_NO_UNICODE_PROPERTY -DSRELL_NO_UNICODE_DATA -DSRELL_NO_NAMEDCAPTURE -DSRELL_NO_VMODE

# This SRELL define seems to break things
#benchmark_defs = ${benchmark_defs} -DSRELL_NO_APIEXT

defs = ${defs} ${benchmark_defs}

#-------------------------------------------------------------------------------
# Examples

# Regex parser example
build obj/examples/regex_parser.o    : compile_cpp examples/regex_parser.cpp
build obj/examples/regex_demo.o      : compile_cpp examples/regex_demo.cpp
build obj/examples/regex_benchmark.o : compile_cpp examples/regex_benchmark.cpp

build bin/examples/regex_demo        : link obj/examples/regex_parser.o obj/examples/regex_demo.o
build bin/examples/regex_benchmark   : link obj/examples/regex_parser.o obj/examples/regex_benchmark.o

# JSON parser example
build obj/examples/json_parser.o     : compile_cpp examples/json_parser.cpp
build obj/examples/json_demo.o       : compile_cpp examples/json_demo.cpp
build obj/examples/json_benchmark.o  : compile_cpp examples/json_benchmark.cpp

build bin/examples/json_demo         : link obj/examples/json_parser.o obj/examples/json_demo.o
build bin/examples/json_benchmark    : link obj/examples/json_parser.o obj/examples/json_benchmark.o

#-------------------------------------------------------------------------------
# Tutorial examples

build obj/tutorial/json_tut1a.o : compile_cpp tutorial/json_tut1a.cpp
build obj/tutorial/json_tut1b.o : compile_cpp tutorial/json_tut1b.cpp
build obj/tutorial/json_tut1c.o : compile_cpp tutorial/json_tut1c.cpp
build obj/tutorial/json_tut2a.o : compile_cpp tutorial/json_tut2a.cpp

build bin/tutorial/json_tut1a   : link obj/tutorial/json_tut1a.o
build bin/tutorial/json_tut1b   : link obj/tutorial/json_tut1b.o
build bin/tutorial/json_tut1c   : link obj/tutorial/json_tut1c.o
build bin/tutorial/json_tut2a   : link obj/tutorial/json_tut2a.o

#-------------------------------------------------------------------------------

# C99 lexer/parser example (not finished)
#build obj/c99_parser/c99_parser_test.o : compile_cpp examples/c99_parser/c99_parser_test.cpp
#build obj/c99_parser/C99Lexer.o        : compile_cpp examples/c99_parser/C99Lexer.cpp
#build obj/c99_parser/C99Parser.o       : compile_cpp examples/c99_parser/C99Parser.cpp
build obj/c99_parser/Lexeme.o          : compile_cpp examples/c99_parser/Lexeme.cpp
build obj/c99_parser/ParseNode.o       : compile_cpp examples/c99_parser/ParseNode.cpp
build obj/c99_parser/Token.o           : compile_cpp examples/c99_parser/Token.cpp
build obj/c99_parser/TypeScope.o       : compile_cpp examples/c99_parser/TypeScope.cpp

#build bin/c99_parser : link $
#  obj/c99_parser/c99_parser_test.o $
#  obj/c99_parser/C99Lexer.o $
#  obj/c99_parser/C99Parser.o $
#  obj/c99_parser/Lexeme.o $
#  obj/c99_parser/ParseNode.o $
#  obj/c99_parser/Token.o $
#  obj/c99_parser/TypeScope.o



#build obj/c99_parser/c_reference_hax.o : compile_cpp examples/c99_parser/c_reference_hax.cpp
#build obj/c99_parser/c_reference.o     : compile_cpp examples/c99_parser/c_reference.cpp
